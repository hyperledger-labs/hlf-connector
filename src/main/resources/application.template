spring:
  profiles.active: local
  
---
springdoc:
  version: 1.0.0
  swagger-ui:
    url: /open-api.yml
  api-docs:
    enabled: false
spring:
  profiles: local
metrics:
  custom:
    kafka:
      enable: false
fabric:
  localhostReportAddress: true
  wallet:
    path: wallet
    adminUser:
      name: admin
    clientUser:
      name: clientUser
  orgConnectionConfig:
    path: config
    filename: connection-local.yaml
  client:
    rest:
      apikey: ePVYHwAaQ0V1XOTX6U
  events:
    enable: true
    standardCCEventEnabled: boolean (if set to true then the chaincode event is attempted at deserializing in the connector)
    chaincode: <comma separated list of channels> (Note : Will soon be deprecated / removed)
    blockDetails:
      - channelName: Name of the Channel
        listenerTopics: topics to which event messages will be sent
    chaincodeDetails:
      - channelName: Name of the Channel
        chaincodeId: chaincode-id of the deployed chaincode in this Channel
        listenerTopics: topics to which event messages will be sent
kafka:
  general:
    consumer-shutdown-timeout-in-sec: <Timeout for graceful shutdown of consumers. During SIGINT this will be the max grace duration for the in-flight records to get committed before exiting the application>
  integration-points: <Note : This is a list and Multiple integration points can be configured>
    - groupId: test_group_id
      enableParallelListenerCapabilities: boolean
      topicPartitions: <Number of Partitions in the Topic>
      brokerHost: <Comma separated list of boostrap servers>
      topic: <topic to listen from>
      ssl-enabled: boolean
      security-protocol: <Only supports SSL>
      ssl-keystore-base64: <if ssl-enabled is true, provide the Base64 encoded value of keystore file>
      ssl-truststore-base64: <if ssl-enabled is true, provide the Base64 encoded value of Truststore file>
      offsetResetPolicy: <possible values are earliest / latest> if not provided, default will be latest.
  event-listeners: <Note : This is a list and Multiple event listeners can be configured>
    -
        brokerHost: <Comma separated list of boostrap servers>
        topic: <default topic to publish Block or Chaincode Events if no topic configured at individual level of event>
        ssl-enabled: boolean
        security-protocol: <Only supports SSL>
        listenToFailedMessages: boolean <set as true if you wish to receive errored Transaction records back to this topic>
        enableIdempotence: boolean, enable strict Kafka producer idempotence

  failed-message-listener: <Note, if you wish to receive errored Transactions to a dedicated topic, these details should be filled up>
    brokerHost: <Comma separated list of boostrap servers>
    topic: <topic to publish errored Records>
    ssl-enabled: boolean
    security-protocol: <Only supports SSL>
dedupe:
    enable: boolean, if enabled, the runtime instance of Connector utilises an in-memory recency cache that would validate a recent submission of Transaction prior to emitting an event with the matching Transaction ID.
    recency-window-size: applicable only if dedupe is enabled, defines the recency cache size.
    recency-window-expiry-in-minutes: applicable only if dedupe is enabled, defines the recency cache TTL in minutes
---
spring:
  profiles: container
  devtools.add-properties: false
  localhostReportAddress: false
  
---
spring:
  profiles: qa
  devtools.add-properties: false
  localhostReportAddress: false

---
spring:
  profiles: stg
  devtools.add-properties: false
  localhostReportAddress: false
  
  
---
spring:
  profiles: prod  
  devtools.add-properties: false
  localhostReportAddress: false
  